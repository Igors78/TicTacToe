#!/usr/bin/env ruby
puts "Tic-tac-toe (American English), noughts and crosses (Commonwealth English),
 or Xs and Os, is a paper-and-pencil game for two players, X and O, who take
 turns marking the spaces in a 3Ã—3 grid. The player who succeeds in placing
 three of their marks in a horizontal, vertical, or diagonal row is the winner.
 It is a solved game with a forced draw assuming best play from both players.
 Please follow the prompt to enter your move.
 Your cross (X) or your (O) will be placed in the cell with corresponding number you enter,
 check reference board.
 Press ENTER to start"
gets

class Game
  def initialize
    @board = [" ", " ", " ", " ", " ", " ", " ", " ", " "]
    @turn = "x"
  end

  def boarding
    linewidth = 60
    puts "Welcome to Tic Tac Toe".center(linewidth)
    puts "Reference board"
    puts "-------------"
    puts "| 1 | 2 | 3 |"
    puts "-------------"
    puts "| 4 | 5 | 6 |"
    puts "-------------"
    puts "| 7 | 8 | 9 |"
    puts "-------------"
    puts "Playing Board"
    puts "-------------"
    @board.each_with_index do |cell, index|
      print "| #{cell} "
      print "|\n-------------\n" if [2, 5, 8].include?(index)
    end
  end

  def fill_the_board
    if @turn == "x"
      puts "Player 1 choice (1-9)?:"
      player1 = gets.chomp.to_i
      check_entry(player1)
    else
      puts "Player 2 choice (1-9)?:"
      player2 = gets.chomp.to_i
      check_entry(player2)
    end
    system "clear"
    start_game
  end

  def check_entry(entry)
    if entry > 9 || entry < 1 || !entry.is_a?(Numeric)
      puts "Range from 1 to 9"
      sleep 1

    elsif @board[entry - 1] != " "
      puts "Cell filled already"
      sleep 1

    elsif @turn == "x"
      @board[entry - 1] = "X"
      @turn = "o"

    else
      @board[entry - 1] = "O"
      @turn = "x"

    end
    boarding
  end

  def check_fill
    if @board.include?(" ")
      fill_the_board
    else
      puts "It's a tie"
      puts "The board is filled out"
      exit
    end
  end

  def start_game
    system "clear"
    boarding
    check_fill
  end
end

playing = Game.new
playing.start_game
